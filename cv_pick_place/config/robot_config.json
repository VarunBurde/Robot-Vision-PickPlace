{
    "PATH_ROBOT_POSITIONS": {
        "help": "Path to file with predefined robot positions.",
        "arg": "--path-robot-positions",
        "default": "config/robot_positions.json"
    },

    "PATH_HOMOGRAPHY_POINTS": {
        "help": "Path to file defining world coordinates of april tags.",
        "arg": "--path-homography-points",
        "default": "config/conveyor_points.json"
    },

    "PATH_CAMERA_CONFIG": {
        "help": "Path to file containing camera configuration.",
        "arg": "--path-camera-config",
        "default": "config/D435_camera_config.json"
    },

    "PATH_CAMERA_CONFIG_DEMOS": {
        "help": "Path to file containing camera configuration for demo functions.",
        "arg": "--path-camera-config-demos",
        "default": "config/D435_camera_config_demos.json"
    },

    "DETECTOR_TYPE": {
        "help": "Selection of object detector. Valid values are 'NN1', 'NN2' and 'HSV'.",
        "arg": "--detector-type",
        "default": "HSV"
    },

    "VERBOSE": {
        "help": "If extra information should be printed to the console.",
        "arg": "--verbose",
        "default": true
    },

    "HOMOGRAPHY_FRAME_COUNT": {
        "help": "Number of frames between homography updates.",
        "arg": "--homography-frame-count",
        "default": 500
    },

    "FRAME_LIMIT": {
        "help": "Number of frames object must be tracked for to start pick & place.",
        "arg": "--frame-limit",
        "default": 10
    },

    "PACKET_DEPTHS": {
        "help": "List of minimal expected depth sizes in millimeters of each packet type. Index corresponds to type of packet.",
        "arg": "--packet-depths",
        "default": [ 10.0, 3.0, 5.0, 5.0 ]
    },

    "MIN_PICK_DISTANCE": {
        "help": "Minimal x position in millimeters for packet picking.",
        "arg": "--min-pick-distance",
        "default": 600
    },

    "MAX_PICK_DISTANCE": {
        "help": "Maximal x position in millimeters for packet picking.",
        "arg": "--max-pick-distance",
        "default": 1900
    },

    "Z_OFFSET": {
        "help": "Z height offset from pick height for all positions except for pick position.",
        "arg": "--z-offset",
        "default": 50.0
    },

    "X_PICK_OFFSET": {
        "help": "X offset between prepick and pick position.",
        "arg": "--x-pick-offset",
        "default": 140
    },

    "GRIP_TIME_OFFSET": {
        "help": "X offset from current packet position to prepick position.",
        "arg": "--grip-time-offset",
        "default": 400
    },

    "PICK_START_X_OFFSET": {
        "help": "Offset between robot and packet for starting the pick move.",
        "arg": "--pick-start-x-offset",
        "default": 25
    },

    "MAX_Z": {
        "help": "Highest allowed gripper position above conveyor belt in millimeters.",
        "arg": "--max-z",
        "default": 500
    },

    "MIN_Y": {
        "help": "Y coordinate of side of the conveyor belt closer to robot base in millimeters.",
        "arg": "--min-y",
        "default": 45.0
    },

    "MAX_Y": {
        "help": "Y coordinate of side of the conveyor belt further from robot base in millimeters.",
        "arg": "--max-y",
        "default": 470.0
    },

    "TRACKER_FRAMES_TO_DEREGISTER": {
        "help": "Number of frames after which the packet is deregistered.",
        "arg": "--tracker-frames-to-deregister",
        "default": 20
    },

    "TRACKER_GUARD": {
        "help": "When packet depth is cropped, the resulting crop will have this many extra pixels on each side.",
        "arg": "--tracker-guard",
        "default": 50
    },

    "TRACKER_MAX_ITEM_DISTANCE": {
        "help": "Maximal distance which packet can travel when it disappears in frame pixels.",
        "arg": "--tracker-max-item-distance",
        "default": 400
    },

    "POS_EST_VISUALIZE": {
        "help": "If results of position estimator should be visualized.",
        "arg": "--pos-est-visualize",
        "default": false
    },

    "POS_EST_CENTER_SWITCH": {
        "help": "Defines the center of the gripper. Valid values are 'mass' and 'height'.",
        "arg": "--pos-est-center-switch",
        "default": "mass"
    },

    "POS_EST_GRIPPER_RADIUS": {
        "help": "Radius of the gripper in meters.",
        "arg": "--pos-est-gripper-radius",
        "default": 0.08
    },

    "POS_EST_GRIPPER_RATION": {
        "help": "Ratio of gripper radius for detecting the gripper annulus.",
        "arg": "--pos-est-gripper-ration",
        "default": 0.8
    },

    "POS_EST_MAX_NUM_TRIES": {
        "help": "Maximal number of tries to estimate the optimal gripper position.",
        "arg": "--pos-est-max-num-tries",
        "default": 100
    },

    "POS_EST_HEIGHT_TH": {
        "help": "Distance between camera and belt in meters.",
        "arg": "--pos-est-height-th",
        "default": -0.76
    },

    "POS_EST_NUM_BINS": {
        "help": "Number of bins for height thresholding (20 is good enough, 10 works as well).",
        "arg": "--pos-est-num-bins",
        "default": 20
    },

    "POS_EST_BLACKLIST_RADIUS": {
        "help": "Distance for blacklisting points in the position estimator.",
        "arg": "--pos-est-blacklist-radius",
        "default": 0.01
    },

    "POS_EST_SAVE_DEPTH_ARRAY": {
        "help": "TODO",
        "arg": "--pos-est-save-depth-array",
        "default": false
    },

    "NN1_ANNOTATION_PATH": {
        "help": "Path to NN1 detector annotations.",
        "arg": "--nn1-annotation-path",
        "default": "neural_nets/tf_ssd_mobnet/annotations"
    },

    "NN1_CHECKPOINT_PATH": {
        "help": "Path to NN1 detector checkpoints.",
        "arg": "--nn1-checkpoint-path",
        "default": "neural_nets/tf_ssd_mobnet/models/my_ssd_mobnet"
    },

    "NN1_PIPELINE_CONFIG": {
        "help": "Path to NN1 detector configuration file.",
        "arg": "--nn1-pipeline-config",
        "default": "neural_nets/tf_ssd_mobnet/models/my_ssd_mobnet/pipeline.config"
    },

    "NN1_LABELMAP": {
        "help": "Path to NN1 detector labelmap file.",
        "arg": "--nn1-labelmap",
        "default": "neural_nets/tf_ssd_mobnet/annotations/label_map.pbtxt"
    },

    "NN1_CHECK_POINT": {
        "help": "Name of NN1 detector checkpoint to be used.",
        "arg": "--nn1-check-point",
        "default": "ckpt-3"
    },

    "NN1_MAX_DETECTIONS": {
        "help": "Maximal ammount of concurrent detections in an image when detecting using the NN1 detector.",
        "arg": "--nn1-max-detections",
        "default": 3
    },

    "NN1_DETECTION_THRESHOLD": {
        "help": "Minimal confidence for detected object to be labeled as a packet when detecting using the NN1 detector. Number beween 0 and 1.",
        "arg": "--nn1-detection-threshold",
        "default": 0.7
    },

    "NN2_WEIGHTS": {
        "help": "Path to NN2 detector weights file.",
        "arg": "--nn2-weights",
        "default": "neural_nets/torch_yolact/weights/best_30.4_res101_coco_340000.pth"
    },

    "NN2_IMG_SIZE": {
        "help": "The image size for validation when using the NN2 detector.",
        "arg": "--nn2-img-size",
        "default": 544
    },

    "NN2_VISUAL_THRESHOLD": {
        "help": "Detections with a score under this threshold will be removed when using the NN2 detector.",
        "arg": "--nn2-visual-threshold",
        "default": 0.8
    },

    "NN2_TRADITIONAL_NMS": {
        "help": "Whether to use traditional nms when using the NN2 detector.",
        "arg": "--nn2-traditional-nms",
        "default": false
    },

    "NN2_HIDE_MASK": {
        "help": "Hide masks in results of the NN2 detector.",
        "arg": "--nn2-hide-mask",
        "default": true
    },

    "NN2_HIDE_BBOX": {
        "help": "Hide boxes in results of the NN2 detector.",
        "arg": "--nn2-hide-box",
        "default": false
    },

    "NN2_HIDE_SCORE": {
        "help": "Hide scores in results of the NN2 detector.",
        "arg": "--nn2-hide-score",
        "default": false
    },

    "NN2_CUTOUT": {
        "help": "Cut out each object and save when using the NN2 detector.",
        "arg": "--nn2-cutout",
        "default": false
    },

    "NN2_SAVE_LINCOMB": {
        "help": "Show the generating process of masks when using the NN2 detector.",
        "arg": "--nn2-save-lincomb",
        "default": false
    },

    "NN2_NO_CROP": {
        "help": "Do not crop the output masks with the predicted bounding box when using the NN2 detector.",
        "arg": "--nn2-no-crop",
        "default": false
    },

    "NN2_REAL_TIME": {
        "help": "Show the detection results real-timely when using the NN2 detector.",
        "arg": "--nn2-real-time",
        "default": true
    },

    "HSV_IGNORE_VERTICAL": {
        "help": "Number of rows of pixels ignored from top and bottom of the image frame when using HSV detector.",
        "arg": "--hsv-ignore-vertical",
        "default": 133
    },

    "HSV_IGNORE_HORIZONTAL": {
        "help": "Number of columns of pixels ignored from left and right of the image frame when using HSV detector.",
        "arg": "--hsv-ignore-horizontal",
        "default": 50
    },

    "HSV_MAX_RATIO_ERROR": {
        "help": "When checking squareness of the packet, the HSV detector allows the ratio of packet sides to be off by this ammount.",
        "arg": "--hsv-max-ratio-error",
        "default": 0.15
    },

    "HSV_WHITE_LOWER": {
        "help": "List of 3 integer values representing Hue (0 to 179), Saturation (0 to 255), Value (0 to 255) of bottom threshold for white color when using the HSV detector.",
        "arg": "--hsv-white-lower",
        "default": [ 60, 0, 85 ]
    },

    "HSV_WHITE_UPPER": {
        "help": "List of 3 integer values representing Hue (0 to 179), Saturation (0 to 255), Value (0 to 255) of top threshold for white color when using the HSV detector.",
        "arg": "--hsv-white-upper",
        "default": [ 179, 255, 255 ]
    },

    "HSV_BROWN_LOWER": {
        "help": "List of 3 integer values representing Hue (0 to 179), Saturation (0 to 255), Value (0 to 255) of bottom threshold for brown color when using the HSV detector.",
        "arg": "--hsv-brown-lower",
        "default": [ 0, 33, 57 ]
    },

    "HSV_BROWN_UPPER": {
        "help": "List of 3 integer values representing Hue (0 to 179), Saturation (0 to 255), Value (0 to 255) of top threshold for brown color when using the HSV detector.",
        "arg": "--hsv-brown-upper",
        "default": [ 60, 255, 178 ]
    }
}
